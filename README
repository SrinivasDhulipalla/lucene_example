Overview
--------
This example try to show as many features of gemfire lucene
in a light-weight application. 

Following gemfire lucene features are tested:
- create an application using gemfire lucene from scratch.
- create lucene index from scratch, with or without analyzer
- create user objects, primitive values(both string and integer), and json objects, put them into gemfire cache and indexed them
- Query using normal StringQueryParser, which is the main weapon. Lucene syntax is supported.
- Demonstate the different query results using analyzers, included a home-baked analyzer
- Demonstate query on primitive value and json object. 
- Demonstate an example of using QueryProvider to create my own lucene query object. This feature is for advanced lucene users. In this example, it's a Range Query for integer value. The demo provided 3 different way to use QueryProvider. 
- start a REST server to show the contents
- REST API to do lucene search (TBD)
- soundex query (TBD)
- dump the index from region into pure lucene file format to be viewed by 3rd party tool such as luke.

It can be run standalone, or in a cluster contains server 
with feeder, server only, client. Both server with feeder 
and client will do the same lucene queries.

The feeding can be done by client too, but testing feed-from-client is not the objective, query-from-client is.

Where is the source code:
------------------------
git clone git@github.com:gesterzhou/lucene_example.git

REST URL:  
---------
http://localhost:8081/gemfire-api/docs/index.html

step 0: run a standalone test
-----------------------------
cd ./git3/lucene_example
./gradlew run

Step 1: start locator if needed
-------------------------------
export GEMIFRE=/Users/gzhou/git_support/gemfire/open/geode-assembly/build/install/apache-geode
cd $GEMFIRE
bin/gfsh

start locator --name=locator1 --port=12345

Step 2: start server only member
cd ~/git3/serveronly/lucene_example
./gradlew run -PappArgs="[2, 50506, true]"

step 3: start server with feeder
cd ~/git3/lucene_example
./gradlew run -PappArgs="[1, 50505, true]"

step 4: start a client
cd ~/git3/client/lucene_example
./gradlew run -PappArgs="[3]"

====================
# show index definition including analyzers
# show index usage in stats
gfsh>list lucene indexes --with-stats
 Index Name   | Region Path | Index.. |                    Field Analyzer                    |   Status    | Query Executions | Updates | Commits | Documents
------------- | ----------- | ------- | ---------------------------------------------------- | ----------- | ---------------- | ------- | ------- | ---------
analyzerIndex | /Person     | [addr.. | {address=MyCharacterAnalyzer, email=KeywordAnalyzer} | Initialized | 1695             | 1008    | 962     | 1004
customerIndex | /Customer   | [symb.. | {}                                                   | Initialized | 678              | 4       | 4       | 4
pageIndex     | /Page       | [symb.. | {}                                                   | Initialized | 0                | 0       | 0       | 0
personIndex   | /Person     | [name.. | {}                                                   | Initialized | 339              | 1008    | 962     | 1004


gfsh>describe lucene index --name=personIndex --region=/Person
Index Name  | Region Path |                 Indexed Fields                 | Field Analyzer |   Status    | Query Executions | Updates | Commits | Documents
----------- | ----------- | ---------------------------------------------- | -------------- | ----------- | ---------------- | ------- | ------- | ---------
personIndex | /Person     | [name, email, address, streetAddress, revenue] | {}             | Initialized | 339              | 1008    | 962     | 1004

gfsh>describe lucene index --name=analyzerIndex --region=/Person
 Index Name   | Region Path |     Indexed Fields     |            Field Analyzer             |   Status    | Query Executions | Updates | Commits | Documents
------------- | ----------- | ---------------------- | ------------------------------------- | ----------- | ---------------- | ------- | ------- | ---------
analyzerIndex | /Person     | [address, name, email] | {address=MyCharacterAnalyzer, email.. | Initialized | 1695             | 1008    | 962     | 1004

=======================
gfsh>create lucene index --name=testIndex --region=testRegion --field=__REGION_VALUE_FIELD
                 Member                  | Status
---------------------------------------- | ---------------------------------
192.168.1.42(server1:26351)<ec><v1>:1025 | Successfully created lucene index

gfsh>create lucene index --name=testIndex --region=testRegion --field=__REGION_VALUE_FIELD
                 Member                  | Status
---------------------------------------- | ---------------------------------------------
192.168.1.42(server1:26351)<ec><v1>:1025 | Failed: Lucene index already exists in region

gfsh>list lucene indexes --with-stats
 Index Name   | Region Path | Index.. |                    Field Analyzer                    |   Status    | Query Executions | Updates | Commits | Documents
------------- | ----------- | ------- | ---------------------------------------------------- | ----------- | ---------------- | ------- | ------- | ---------
analyzerIndex | /Person     | [addr.. | {address=MyCharacterAnalyzer, email=KeywordAnalyzer} | Initialized | 1695             | 1008    | 962     | 1004
customerIndex | /Customer   | [symb.. | {}                                                   | Initialized | 678              | 4       | 4       | 4
pageIndex     | /Page       | [symb.. | {}                                                   | Initialized | 0                | 0       | 0       | 0
personIndex   | /Person     | [name.. | {}                                                   | Initialized | 339              | 1008    | 962     | 1004
testIndex     | /testRegion | [__RE.. | {}                                                   | Defined     | NA               | NA      | NA      | NA

gfsh>create region --name=testRegion --total-num-buckets=10 --type=PARTITION
=PARTITION                                 =PARTITION_REDUNDANT                       =PARTITION_PERSISTENT                      
=PARTITION_REDUNDANT_PERSISTENT            =PARTITION_OVERFLOW                        =PARTITION_REDUNDANT_OVERFLOW              
=PARTITION_PERSISTENT_OVERFLOW             =PARTITION_REDUNDANT_PERSISTENT_OVERFLOW   =PARTITION_HEAP_LRU                        
=PARTITION_REDUNDANT_HEAP_LRU              =PARTITION_PROXY                           =PARTITION_PROXY_REDUNDANT                 
gfsh>create region --name=testRegion --type=PARTITION
  Member    | Status
----------- | ---------------------------------------------
server50505 | Region "/testRegion" created on "server50505"

gfsh>list lucene indexes --with-stats
 Index Name   | Region Path |  Indexed Fields   | Field Analyzer |   Status    | Query Executions | Updates | Commits | Documents
------------- | ----------- | ----------------- | -------------- | ----------- | ---------------- | ------- | ------- | ---------
analyzerIndex | /Person     | [address, name,.. | {address=MyC.. | Initialized | 1695             | 1008    | 581     | 1004
customerIndex | /Customer   | [symbol, revenu.. | {}             | Initialized | 678              | 4       | 4       | 4
pageIndex     | /Page       | [symbol, name, .. | {}             | Initialized | 0                | 0       | 0       | 0
personIndex   | /Person     | [name, email, a.. | {}             | Initialized | 339              | 1008    | 528     | 1004
testIndex     | /testRegion | [__REGION_VALUE.. | {}             | Initialized | 0                | 0       | 0       | 0


gfsh>describe lucene index --name=testIndex --region=/testRegion
Index Name | Region Path |     Indexed Fields     | Field Analyzer |   Status    | Query Executions | Updates | Commits | Documents
---------- | ----------- | ---------------------- | -------------- | ----------- | ---------------- | ------- | ------- | ---------
testIndex  | /testRegion | [__REGION_VALUE_FIELD] | {}             | Initialized | 0                | 0       | 0       | 0



========================
gfsh>put --key=1 --value=value1 --region=testRegion
Result      : true
Key Class   : java.lang.String
Key         : 1
Value Class : java.lang.String
Old Value   : <NULL>


gfsh>put --key=2 --value=value2 --region=testRegion
Result      : true
Key Class   : java.lang.String
Key         : 2
Value Class : java.lang.String
Old Value   : <NULL>


gfsh>put --key=3 --value=value3 --region=testRegion
Result      : true
Key Class   : java.lang.String
Key         : 3
Value Class : java.lang.String
Old Value   : <NULL>


gfsh>search lucene --
 --name            --region          --queryStrings    --defaultField   
gfsh>search lucene --name=tes --
 --region          --queryStrings    --defaultField   
gfsh>search lucene --name=testIndex --
 --region          --queryStrings    --defaultField   
gfsh>search lucene --name=testIndex --region=/
=/Customer     =/Page         =/Person       =/testRegion   
gfsh>search lucene --name=testIndex --region=/testRegion --queryStrings=value1 --defaultField=__REGION_VALUE_FIELD
key | value  | score
--- | ------ | ---------
1   | value1 | 0.2876821

gfsh>search lucene --name=testIndex --region=/testRegion --queryStrings=value* --defaultField=__REGION_VALUE_FIELD
key | value  | score
--- | ------ | -----
1   | value1 | 1
3   | value3 | 1
2   | value2 | 1

gfsh>search lucene --name=personIndex --region=/Person --defaultField=name --queryStrings=Tom3* --limit=5

gfsh>search lucene --name=personIndex --region=/Person --defaultField=name --queryStrings="Tom36* OR Tom422"

# query using keyword analyzer, analyzerIndex uses KeywordAnalyzer for field "email"
gfsh>search lucene --name=analyzerIndex --region=/Person --defaultField=email --queryStrings="email:tzhou490@example.com"
 key   |                                                         value                                                          | score
------ | ---------------------------------------------------------------------------------------------------------------------- | -------
key490 | Person{name='Tom490 Zhou', email='tzhou490@example.com', address='490 Lindon St, Portland_OR_97490', revenue='490000'} | 1.89712
Note: only found key490.

gfsh>search lucene --name=personIndex --region=/Person --defaultField=email --queryStrings="email:tzhou490@example.com"
 key   |                                                         value                                                          | score
------ | ---------------------------------------------------------------------------------------------------------------------- | -----------
key330 | Person{name='Tom330 Zhou', email='tzhou330@example.com', address='330 Lindon St, Portland_OR_97330', revenue='330000'} | 0.05790569
key70  | Person{name='Tom70 Zhou', email='tzhou70@example.com', address='70 Lindon St, Portland_OR_97070', revenue='70000'}     | 0.05790569
key110 | Person{name='Tom110 Zhou', email='tzhou110@example.com', address='110 Lindon St, Portland_OR_97110', revenue='110000'} | 0.05790569
key73  | Person{name='Tom73 Zhou', email='tzhou73@example.com', address='73 Lindon St, Portland_OR_97073', revenue='73000'}     | 0.05790569
key614 | Person{name='Tom614 Zhou', email='tzhou614@example.com', address='614 Lindon St, Portland_OR_97614', revenue='614000'} | 0.05790569
key413 | Person{name='Tom413 Zhou', email='tzhou413@example.com', address='413 Lindon St, Portland_OR_97413', revenue='413000'} | 0.07806893
key490 | Person{name='Tom490 Zhou', email='tzhou490@example.com', address='490 Lindon St, Portland_OR_97490', revenue='490000'} | 1.7481685

Note: found a lot due to search by "example.com", because personIndex is using standard analyzer for field "email".

# query json object
gfsh>search lucene --name=personIndex --region=/Person --defaultField=name --queryStrings="Tom*JSON"
  key    |                                                                   value                                                                    | score
-------- | ------------------------------------------------------------------------------------------------------------------------------------------ | -----
jsondoc2 | PDX[3,__GEMFIRE_JSON]{address=PDX[1,__GEMFIRE_JSON]{city=New York, postalCode=10021, state=NY, streetAddress=21 2nd Street}, age=25, las.. | 1
jsondoc1 | PDX[3,__GEMFIRE_JSON]{address=PDX[1,__GEMFIRE_JSON]{city=New York, postalCode=10021, state=NY, streetAddress=21 2nd Street}, age=25, las.. | 1
